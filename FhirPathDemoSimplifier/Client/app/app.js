// Generated by IcedCoffeeScript 108.0.9
(function() {
  var app, fpath;

  fpath = null;

  app = angular.module('app', ['ngCookies', 'ngRoute', 'ngAnimate', 'ui.codemirror', 'firebase']);

  app.run(function($rootScope, $window) {
    return console.log('run');
  });

  app.config(function($routeProvider) {
    var rp;
    rp = $routeProvider;
    rp.when('/', {
      name: 'index',
      templateUrl: 'Client/app/partials/_index.html',
      controller: 'IndexCtrl',
      reloadOnSearch: false
    });
    return rp.otherwise({
      templateUrl: 'Client/app/partials/404.html'
    });
  });

  app.controller('IndexCtrl', function($scope, $firebaseObject) {
    var Save, codemirrorExtraKeys, fbRef;
    require(['Client/app/vendor/fhirpath.js/bundle.js'], function(fhirpath) {
      fpath = fhirpath;
      return $scope.update();
    });
    fbRef = new Firebase("https://fhirpath.firebaseio.com/");
    $scope.examples = $firebaseObject(fbRef);
    Save = function(data, cb) {
      var obj, ref;
      if (!(data || data.name)) {
        return;
      }
      ref = new Firebase("https://fhirpath.firebaseio.com/" + data.name);
      obj = $firebaseObject(ref);
      return obj.$loaded().then(function() {
        console.log("loaded", obj);
        obj.path = data.path;
        obj.name = data.name;
        obj.resource = data.resource;
        return obj.$save().then(function() {
          return cb();
        });
      });
    };
    $scope.saveExample = function() {
      $scope.saving = "Saving...";
      return Save({
        path: $scope.path,
        name: $scope.exampleName,
        resource: $scope.resource
      }, function() {
        return $scope.saving = null;
      });
    };
    $scope.path = 'Patient.name.given |  Patient.name.given';
    $scope.resource = '{"resourceType": "Patient", "name": [{"given": ["John"]}]}';
    $scope.update = function() {
      var e, resource, result;
      try {
        resource = JSON.parse($scope.resource);
        $scope.parseError = null;
      } catch (_error) {
        e = _error;
        $scope.parseError = e.toString();
        return;
      }
      try {
        result = fpath.evaluate(resource, $scope.path);
        $scope.result = JSON.stringify(result, null, "  ");
        $scope.errors = null;
        return $scope.error = null;
      } catch (_error) {
        e = _error;
        if (e.errors) {
          $scope.errors = e.errors;
          return console.log("ERROR", e.errors);
        } else {
          return $scope.error = e.toString();
        }
      }
    };
    $scope.selectExample = function(ex) {
      $scope.resource = ex.resource;
      $scope.path = ex.path;
      $scope.exampleName = ex.name;
      return $scope.update();
    };
    codemirrorExtraKeys = window.CodeMirror.normalizeKeyMap({
      "Ctrl-Space": function() {
        return $scope.$apply('doMapping()');
      },
      Tab: function(cm) {
        return cm.replaceSelection("  ");
      }
    });
    return $scope.codemirrorConfig = {
      lineWrapping: false,
      lineNumbers: true,
      mode: 'javascript',
      extraKeys: codemirrorExtraKeys,
      viewportMargin: Infinity
    };
  });

}).call(this);
